{"version":3,"sources":["Components/Section/Section.jsx","Components/AppBar/AppBar.jsx","Components/Container/Container.jsx","Components/Layout/Layout.jsx","Components/Controls/Controls.jsx","Components/FeedbackSection/FeedbackSection.jsx","Components/StatisticsBar/StatisticsBar.jsx","Components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","AppBar","Container","Layout","Controls","onIncrement","options","map","option","type","onClick","uuidv4","FeedbackSection","this","props","Component","StatisticsBar","good","neutral","bad","total","positivePercentage","React","defaultProps","Notification","message","App","state","mark","setState","prevState","Math","round","totalFeedbacks","countTotalFeedback","positiveFeedbackPercentage","countPositiveFeedbackPercentage","feedbacks","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79570441.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Section.scss';\r\n\r\nconst Section = ({title, children}) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"title\">{title}</h2>\r\n        {children}\r\n    </section>\r\n)\r\n export default Section;","import React from 'react';\r\nimport './AppBar.scss';\r\n\r\nconst AppBar = () => (\r\n    <div className=\"header\"></div>\r\n);\r\n\r\nexport default AppBar;","import React from 'react';\r\nimport './Container.scss'\r\n\r\nconst Container = ({children}) => (\r\n    <div className=\"container\">{children}</div>\r\n)\r\n export default Container;","import React from 'react';\r\nimport AppBar from '../AppBar/AppBar';\r\nimport Container from '../Container/Container';\r\n\r\nconst Layout = ({children}) => (\r\n    <>\r\n<AppBar />\r\n<Container>{children}</Container>\r\n    </>\r\n\r\n);\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './Controls.scss';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Controls = ({onIncrement, options}) => (\r\n\r\n    <div className=\"controls\">\r\n    {options.map(option => (\r\n        <button \r\n        type='button' \r\n        className=\"button\" \r\n        onClick={()=>onIncrement(option)}\r\n        key={uuidv4()}\r\n        >\r\n            {option}\r\n        </button>))\r\n    }\r\n</div>\r\n);\r\n\r\nexport default Controls;","import {Component} from 'react';\r\nimport Controls from '../Controls/Controls';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FeedbackSection extends Component {\r\n  static propTypes = {\r\n    onIncrement: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n  };\r\n\r\n  render () {\r\n  return (\r\n    <Controls \r\n    onIncrement = {this.props.onIncrement}\r\n    options={this.props.options} \r\n    />);\r\n  }\r\n};\r\n\r\nexport default FeedbackSection;","import React from 'react';\r\nimport './StatisticsBar.scss';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass StatisticsBar extends React.Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n\r\nrender () {\r\n  const {good, neutral, bad, total, positivePercentage} = this.props;\r\n  \r\n  return (\r\n<ul className=\"assessment_list\">\r\n  <li className=\"assessment_item\"><p className=\"mark_title\">Neutral: </p><span className=\"mark\">{neutral}</span></li>\r\n  <li className=\"assessment_item\"><p className=\"mark_title\">Bad: </p><span className=\"mark\">{bad}</span></li>\r\n  <li className=\"assessment_item\"><p className=\"mark_title\">Total: </p><span className=\"mark\">{total}</span></li>\r\n  <li className=\"assessment_item\"><p className=\"mark_title\">Good: </p><span className=\"mark\">{good}</span></li>\r\n  <li className=\"assessment_item\"><p className=\"mark_title\">Positive feedback:</p><span className=\"mark\">{positivePercentage}%</span></li>\r\n</ul>\r\n)\r\n    };\r\n};\r\n\r\nexport default StatisticsBar;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Notification.scss'\r\n\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className=\"notification\">{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport Section from \"../src/Components/Section/Section\";\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport FeedbackSection from \"./Components/FeedbackSection/FeedbackSection\";\r\nimport StatisticsBar from \"./Components/StatisticsBar/StatisticsBar\";\r\nimport Notification from \"./Components/Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  \r\n\r\n  onIncrement = (mark) => {\r\n    this.setState((prevState) => ({\r\n      [mark]: prevState[mark] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good, neutral, bad } = this.state;\r\n    return Math.round((good * 100) / (good + neutral + bad));\r\n  }\r\n\r\n  // }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedbacks = this.countTotalFeedback();\r\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n    const feedbacks = Object.keys(this.state);\r\n\r\n    return (\r\n      <Layout>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackSection onIncrement={this.onIncrement} options={feedbacks} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {totalFeedbacks === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <StatisticsBar\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedbacks}\r\n              positivePercentage={positiveFeedbackPercentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}